/* 3) შექმენით ერთი div ID-ით container, რომელიც იქნება Flexbox კონტეინერი. მასში ჩასვით 5 ელემენტი (მაგალითად div კლასით box) და თითოეულზე გამოიყენეთ სხვადასხვა ფერის ფონი. container-ზე გამოიყენეთ Flexbox-ის შემდეგი თვისებები: flex-direction, justify-content, align-items, flex-wrap, ხოლო box-ებზე – flex-grow და flex-shrink. ყოველი თვისება ცალ-ცალკე სცადეთ სხვადასხვა მნიშვნელობებით და დააკვირდით, როგორ მოქმედებს განლაგებაზე

შექმენით div ID-ით container
container-ში ჩასვით 5 ელემენტი div კლასით box
box ელემენტებს მიანიჭეთ მინიმუმ 100px სიგანე და სიმაღლე და სხვადასხვა background-color
container-ზე დაწერეთ:
display: flex;
flex-direction: row / column / row-reverse / column-reverse
justify-content: flex-start / flex-end / center / space-between / space-around / space-evenly
align-items: flex-start / flex-end / center / stretch / baseline
flex-wrap: nowrap / wrap / wrap-reverse
თითო box-ზე ცალ-ცალკე სცადეთ:
flex-grow: 1 ან განსხვავებული მნიშვნელობები
flex-shrink: 0 ან განსხვავებული მნიშვნელობები */

* {
    padding: 0%;
    margin: 0%;
    box-sizing: border-box;
}


#container {
    background-color: palevioletred;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row ;
    align-items: flex-start;
    flex-wrap: wrap;
    justify-content: space-around;
}

#box1 {
    background-color: rgb(255, 0, 0);
    
}

#box2 {
    background-color: rgb(0, 30, 255);
}

#box3 {
    background-color: rgb(38, 255, 0);
    flex-grow: 0;
}

#box4 {
    background-color: rgb(255, 187, 0);
    flex-shrink: 3;
}

#box5 {
    background-color: rgb(255, 89, 0);
}

.box{
    text-align: center;
    border: 2px solid;
    height: 100px;
    width: 100px;
    align-content: center;

}
